{"version":3,"sources":["composants/Entete.jsx","images/couverture.webp","composants/Dossier.jsx","firebase.js","composants/ListeDossiers.jsx","composants/Accueil.jsx","composants/AjouterDossier.jsx","composants/Appli.jsx","index.jsx"],"names":["Entete","utilisateur","className","Button","variant","size","onClick","firebase","auth","signOut","displayName","Avatar","alt","src","photoURL","Dossier","id","nom","couleur","datemodif","couverture","useState","positionPop","setPositionPop","style","backgroundColor","IconButton","aria-label","disableRipple","manqueCouverture","formaterDate","e","currentTarget","Popover","open","Boolean","anchorEl","onClose","Box","display","flexDirection","padding","textTransform","fontWeight","d","dateJs","Date","seconds","getDate","getMonth","getFullYear","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","instanceFirebaseUI","firebaseui","AuthUI","firestore","ListeDossiers","etatDossiers","dossiers","setDossiers","useEffect","a","tabDossiers","collection","doc","uid","get","forEach","push","data","chercherDossiers","color","textAlign","fontSize","map","dossier","Accueil","start","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","GithubAuthProvider","signInFlow","EspaceBouton","makeStyles","theme","root","margin","spacing","AjouterDossier","ouvert","setOuvert","gererAjout","classMargin","setNom","SansCouverture","setCouverture","setCouleur","viderChamps","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","type","fullWidth","onChange","target","value","defaultValue","marginBottom","colors","width","triangle","onChangeComplete","hex","DialogActions","Appli","setUtilisateur","onAuthStateChanged","util","set","courriel","email","datecompte","FieldValue","serverTimestamp","merge","objDossier","signets","add","then","refDoc","Fab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c11f3d83.chunk.js","sourcesContent":["import './Entete.scss';\r\nimport { Avatar } from '@material-ui/core'; \r\nimport Button from '@material-ui/core/Button';\r\nimport firebase from 'firebase/app';\r\n\r\nexport default function Entete({utilisateur}) {\r\n  return (\r\n    <header className=\"Entete\">\r\n      <div className=\"logo\">\r\n        Signets\r\n        <Button \r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          className=\"btn-deconnexion\"\r\n          onClick={() => firebase.auth().signOut()}\r\n        >\r\n          Déconnexion\r\n        </Button>\r\n      </div>\r\n      <div className=\"utilisateur\">{utilisateur.displayName} <Avatar className=\"avatar\" alt={utilisateur.displayName} src={utilisateur.photoURL} /></div>\r\n    </header>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/couverture.2dc9ece9.webp\";","import \"./Dossier.scss\";\r\nimport { useState } from \"react\";\r\nimport { IconButton, Button, Box } from \"@material-ui/core\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport manqueCouverture from \"../images/couverture.webp\";\r\n\r\nexport default function Dossier({ id, nom, couleur, datemodif, couverture }) {\r\n\r\n  //gestion du popOver pour modifier et supprimer les dossiers\r\n  const [positionPop, setPositionPop] = useState(null);\r\n\r\n  function ouvrirPop(e) {\r\n    setPositionPop(e.currentTarget);\r\n  };\r\n\r\n  function fermerPop() {\r\n    setPositionPop(null);\r\n  };\r\n\r\n  return (\r\n    <article className=\"Dossier\" style={{ backgroundColor: couleur }}>\r\n      <div className=\"couverture\">\r\n        <IconButton\r\n          className=\"deplacer\"\r\n          aria-label=\"déplacer\"\r\n          disableRipple={true}\r\n        >\r\n          <SortIcon />\r\n        </IconButton>\r\n        <img src={couverture ? couverture : manqueCouverture} alt={nom} />\r\n      </div>\r\n      <div className=\"info\">\r\n        <h2>{nom}</h2>\r\n        <p>Modifié : {formaterDate(datemodif)}</p>\r\n      </div>\r\n      <IconButton\r\n        onClick={ouvrirPop}\r\n        className=\"modifier\"\r\n        aria-label=\"modifier\"\r\n        size=\"small\"\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Popover\r\n        open={Boolean(positionPop)}\r\n        anchorEl={positionPop}\r\n        onClose={fermerPop}\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\" padding={1}>\r\n          <Button\r\n            variant=\"text\"\r\n            style={{ textTransform: \"capitalize\", fontWeight: \"normal\" }}\r\n          >\r\n            Modifier\r\n          </Button>\r\n          <Button\r\n            variant=\"text\"\r\n            style={{ textTransform: \"capitalize\", fontWeight: \"normal\" }}\r\n          >\r\n            Supprimer\r\n          </Button>\r\n        </Box>\r\n      </Popover>\r\n    </article>\r\n  );\r\n}\r\n\r\n/**\r\n * Formate les objets date de Firestore et retourne une chaîne de caractères\r\n * @param {Object} d Objet date retourné par Firestore\r\n * @returns String date formatée en français\r\n */\r\nfunction formaterDate(d) {\r\n  const dateJs = d ? new Date(d.seconds * 1000) : new Date();\r\n  const mois = [\r\n    \"janvier\",\r\n    \"février\",\r\n    \"mars\",\r\n    \"avril\",\r\n    \"mai\",\r\n    \"juin\",\r\n    \"juillet\",\r\n    \"août\",\r\n    \"septembre\",\r\n    \"octobre\",\r\n    \"novembre\",\r\n    \"décembre\",\r\n  ];\r\n  return `${dateJs.getDate()} ${\r\n    mois[dateJs.getMonth()]\r\n  } ${dateJs.getFullYear()}`;\r\n}","import firebase from 'firebase/app';\r\nimport * as firebaseui from 'firebaseui';\r\nimport 'firebase/firestore';\r\n\r\n// Configuration (mettez-y les vôtres !)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA6-S3TFperKszLmLzLmM5p490HII3hX2g\",\r\n  authDomain: \"utilisateurs-ex4-4f99d.firebaseapp.com\",\r\n  projectId: \"utilisateurs-ex4-4f99d\",\r\n  storageBucket: \"utilisateurs-ex4-4f99d.appspot.com\",\r\n  messagingSenderId: \"394436399062\",\r\n  appId: \"1:394436399062:web:0efd156de73cb1bea4de77\",\r\n  measurementId: \"G-GF3XS8L1RW\"\r\n  \r\n};\r\n\r\n// Initialiser Firebase\r\nif(!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\n// Initialiser FirebaseUI\r\nexport const instanceFirebaseUI = new firebaseui.auth.AuthUI(firebase.auth());\r\n\r\n// Initialiser Firestore\r\nexport const firestore = firebase.firestore();\r\n","import './ListeDossiers.scss';\r\nimport Dossier from './Dossier';\r\nimport { firestore } from '../firebase';\r\nimport { useEffect, useState } from 'react';\r\nimport { colors } from '@material-ui/core';\r\n\r\nexport default function ListeDossiers({utilisateur, etatDossiers}) {\r\n  // État des dossiers (notez que cet état est défini dans le composant parent \"Appli\", et passé ici dans les props)\r\n  const [dossiers, setDossiers] = etatDossiers;\r\n\r\n  useEffect(\r\n    () => {\r\n      // On crée une fonction asynchrone pour pouvoir utiliser la syntaxe await sur les requêtes asynchrones à Firestore\r\n      async function chercherDossiers() {\r\n        // Tableau qui va recevoir nos dossiers de Firestore\r\n        const tabDossiers = [];\r\n        // La requête à Firestore utilise 'await' pour retourner la réponse\r\n        const reponse = await firestore.collection('utilisateurs-ex4').doc(utilisateur.uid).collection('dossiers').get();\r\n        // On traverse la réponse ...\r\n        reponse.forEach(\r\n          // ... et pour chaque doc dans la réponse on ajoute un objet dans tabDossiers\r\n          doc => {\r\n            tabDossiers.push({id: doc.id, ...doc.data()})\r\n          }\r\n          // Remarquez que le 'id' ne fait pas partie des attributs de données des documents sur Firestore, et il faut l'extraire séparément avec la propriété 'id'. Remarquez aussi l'utilisation de l'opérateur de décomposition (spread operator (...))\r\n        );\r\n        // Une fois notre réponse traitée au complet et le tableau tabDossiers renpli avec tous les objets représentants les documents 'dossiers' trouvés, nous pouvons faire la mutation de l'état de la variable 'dossiers' (en utilisant le mutateur setDossiers) pour forcer un 'rerender' (réaffichage) du composant par React\r\n        setDossiers(tabDossiers);\r\n      }\r\n      // Faut pas oublier d'appeler la fonction\r\n      chercherDossiers();\r\n    }, []\r\n  );\r\n\r\n  return (\r\n    <ul className=\"ListeDossiers\">\r\n     {!dossiers.length &&\r\n        <div className=\"NonSignets\" style={{backgroundColor: '#008b8b', color : \"white\", padding : \"100px 30px\"}}>\r\n          <p>Votre liste de dossiers est vide</p>\r\n          <h1 style={{textAlign: \"center\", fontSize : \"40px\"}} >;-(</h1>\r\n        </div>\r\n        }\r\n      {\r\n        dossiers.map( \r\n          dossier =>  <li key={dossier.id}><Dossier {...dossier} /></li>\r\n        )\r\n      }\r\n    </ul>\r\n  );\r\n}","import './Accueil.scss';\r\nimport firebase from 'firebase/app';\r\nimport { instanceFirebaseUI } from '../firebase';\r\nimport 'firebaseui/dist/firebaseui.css';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function Accueil() {\r\n  useEffect(\r\n    () => instanceFirebaseUI.start(\"#firebaseui-widget\", {\r\n      signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n        firebase.auth.GithubAuthProvider.PROVIDER_ID\r\n      ],\r\n      signInFlow: 'popup'\r\n    }, [])\r\n  )\r\n\r\n  return (\r\n    <div className=\"Accueil\">\r\n      <h3 className=\"logo\">Signets <span>beta</span></h3>\r\n      <h2 className=\"amorce\">Organisez vos signets Web, <br />Simple comme bonjour !</h2>\r\n      <h4 className=\"connexion-etiquette\">Connexion à Signets</h4>\r\n      <div id=\"firebaseui-widget\"></div>\r\n    </div>\r\n  )\r\n}","import Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useState } from 'react';\r\nimport { TwitterPicker } from 'react-color';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport SansCouverture from \"../images/couverture.webp\";\r\n\r\nconst EspaceBouton = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AjouterDossier({ouvert, setOuvert, gererAjout}) {\r\n\r\n  const classMargin = EspaceBouton();\r\n  const [nom, setNom] = useState('');\r\n  const [couverture, setCouverture] = useState(SansCouverture);\r\n  const [couleur, setCouleur] = useState('#537169');\r\n\r\n  function viderChamps() {\r\n    setNom('');\r\n    setCouverture('');\r\n    setCouleur('#537169');\r\n  }\r\n\r\n  return (\r\n    <div className=\"AjouterDossier\">\r\n      <Dialog open={ouvert} onClose={()=>setOuvert(false)} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Ajouter un dossier</DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"nomDossier\"\r\n              label=\"Nom du dossier\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e) => setNom(e.target.value)}\r\n              defaultValue={nom}\r\n              style={{marginBottom : \"20px\"}}\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlImage\"\r\n              label=\"Adresse de l'image de couverture\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e) => setCouverture(e.target.value)}\r\n              defaultValue={couverture}\r\n            />\r\n          <TwitterPicker \r\n           colors={['#883392', '#213213','#231132','#859435','#627323','#231238',]}\r\n            width=\"100%\" \r\n            triangle=\"hide\" \r\n            onChangeComplete={(couleur, e) => setCouleur(couleur.hex)}\r\n            style={{marginBottom : \"20px\"}}\r\n            color={couleur}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions className={classMargin.root}>\r\n          <Button onClick={()=>{setOuvert(false); viderChamps()}} color=\"secondary\" style={{backgroundColor: '#990000'}} variant=\"contained\">\r\n            Annuler\r\n          </Button>\r\n          <Button onClick={() => {nom !== '' && gererAjout(nom, couverture, couleur); viderChamps(); }} color=\"primary\" style={{backgroundColor: '#009900'}} variant=\"contained\">\r\n            Ajouter\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import './Appli.scss';\r\nimport Entete from './Entete';\r\nimport ListeDossiers from './ListeDossiers';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Accueil from './Accueil';\r\nimport { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport {firestore} from '../firebase';\r\nimport AjouterDossier from './AjouterDossier';\r\n\r\nexport default function Appli() {\r\n  // État de l'utilisateur\r\n  const [utilisateur, setUtilisateur] = useState(null);\r\n\r\n  // État des dossiers\r\n  const etatDossiers = useState([]);\r\n  const [dossiers, setDossiers] = etatDossiers;\r\n\r\n  // État de la boîte de dialogue \"Ajout Dossier\"\r\n  const [ouvert, setOuvert] = useState(false);\r\n\r\n  // Valider la connexion utilisateur\r\n  useEffect(\r\n    () => {\r\n     firebase.auth().onAuthStateChanged(\r\n       util => {\r\n        setUtilisateur(util);\r\n        // Créer le profil de l'utilisateur dans Firestore si util n'est pas NULL\r\n        if(util) {\r\n          firestore.collection('utilisateurs-ex4').doc(util.uid).set({\r\n            nom: util.displayName, \r\n            courriel: util.email, \r\n            datecompte: firebase.firestore.FieldValue.serverTimestamp()\r\n          }, {merge: true});\r\n        }\r\n      }\r\n     );\r\n    }, []\r\n  );\r\n  \r\n  // Ajouter un dossier\r\n  function gererAjout(nom, couverture, couleur) {\r\n    // Objet à ajouter dans la collection \"dossiers\" sur Firestore\r\n    const objDossier = {\r\n      nom: nom,\r\n      couverture: couverture,\r\n      couleur: couleur,\r\n      datemodif: firebase.firestore.FieldValue.serverTimestamp(),\r\n      signets: []\r\n    };\r\n    // Ajout de l'objet\r\n    firestore.collection('utilisateurs-ex4').doc(utilisateur.uid).collection('dossiers').add(objDossier).then(\r\n      refDoc => {\r\n        // Puis on utilise la référence retournée pour chercher le détail du dossier\r\n        refDoc.get().then(\r\n          // Et on modifie l'état des dossiers en joignant ce dernier pour forcer un \"rerender\" du composant \"ListeDossiers\"\r\n          doc => setDossiers([...dossiers, {...doc.data(), id: doc.id}])\r\n        );\r\n        // On oublie pas de fermer la boîte de dialogue\r\n        setOuvert(false);\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"Appli\">\r\n      {\r\n        // Un utilisateur est connecté ?\r\n        utilisateur ?\r\n          <>\r\n            <Entete utilisateur={utilisateur} />\r\n            <section className=\"contenu-principal\">\r\n              <ListeDossiers utilisateur={utilisateur} etatDossiers={etatDossiers} />\r\n              <AjouterDossier ouvert={ouvert} setOuvert={setOuvert} gererAjout={gererAjout} />\r\n              <Fab onClick={() => setOuvert(true)} className=\"ajoutRessource\" color=\"primary\" aria-label=\"Ajouter dossier\">\r\n                <AddIcon />\r\n              </Fab>\r\n            </section>\r\n          </>\r\n        // Sinon :\r\n        :\r\n          <Accueil />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Appli from './composants/Appli';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Appli />\r\n  </React.StrictMode>,\r\n  document.getElementById('racine')\r\n);\r\n"],"sourceRoot":""}